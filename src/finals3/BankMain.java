package finals3;

import java.awt.*;
import javax.swing.*;
// BankMain class represents the main GUI application for banking operations
public class BankMain extends javax.swing.JFrame {

    // Creates new form BankMain

    double amt;
    int accNum;
    Account1 a1 = new Account1(); // Create an instance of Account1
    Account2 a2 = new Account2(); // Create an instance of Account2
    
    // Constructor to initialize the form and set background color
    public BankMain() {
        initComponents();
        Color color = new Color(0, 102, 102);
        getContentPane().setBackground(color);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(851, 480));
        setResizable(false);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(240, 215, 145));
        jButton1.setText("START");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(240, 215, 145));
        jButton2.setText("CHECK BALANCE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(240, 215, 145));
        jButton3.setText("DEPOSIT");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(240, 215, 145));
        jButton4.setText("WITHDRAW");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Lucida Sans", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(240, 215, 145));
        jButton5.setText("EXIT");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(250, 249, 246));
        jLabel1.setText("Welcome to Bank of PaNice");

        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\thinkpad T14\\Downloads\\7.png")); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(191, 191, 191)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // START BUTTON
        // Try block to handle potential exceptions during account number input
        try
        {
            // Prompt the user to enter account number 
            accNum = Integer.parseInt(JOptionPane.showInputDialog(null, 
          "Please Enter PIN Number",
           "Welcome to BankOOP", 1));
            // Check if the entered account number matches the account number of Account1   
            if (accNum == a1.getAccNum())
            {
                System.out.println("Account Opened");
                JOptionPane.showMessageDialog(null, 
                    "Name : " + a1.getName() +
                    "\nAddress : " + a1.getAddress() + 
                    "\nEmail : " + a1.getEmail() + 
                    "\nContact Number : " + a1.getContactNum() + 
                    "\nDate of Birth : " + a1.getBirthday(),
                    "PERSONAL INFORMATION", 1);
            }
            // Check if the entered account number matches the account number of Account2
            else if (accNum == a2.getAccNum())
            {
                System.out.println("Account Opened");
                JOptionPane.showMessageDialog(null, 
                    "Name : " + a2.getName() +
                    "\nAddress : " + a2.getAddress() + 
                    "\nEmail : " + a2.getEmail() + 
                    "\nContact Number : " + a2.getContactNum() + 
                    "\nDate of Birth : " + a2.getBirthday(),
                    "PERSONAL INFORMATION", 1);
            }
            // Display an error message if the entered account number does not exist
            else
            {
                JOptionPane.showMessageDialog(null, 
                  """
                            Your PIN does not exist
                            Please open an account at BoP""",
                    "ERROR", 0);
            }
        }
        // Catch block to handle the NumberFormatException in case of invalid input
        catch (NumberFormatException ex)
        {
            // Display an error message if the input is not a valid integer
            JOptionPane.showMessageDialog(null, 
                 "Please input your 3-DIGIT PIN NUMBER", 
                 "ERROR", 0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // CHECK BALANCE BUTTON
        // Display the balance for Account1 if the entered account number matches
        if (accNum == a1.getAccNum())
        {
            JOptionPane.showMessageDialog(null, 
                            "Current Balance : " + a1.getBalance(),
                            "BALANCE CHECK", 1);
            System.out.println("Current Balance: Php " + a1.getBalance());
                    
        }
        // Display the balance for Account2 if the entered account number matches
        else if (accNum == a2.getAccNum())
        {
            JOptionPane.showMessageDialog(null, 
                            "Current Balance : " + a2.getBalance(),
                            "BALANCE CHECK", 1);
            System.out.println("Current Balance: Php " + a2.getBalance());
                    
        }
        // Show an error if the entered account number does not exist
        else
        {
            JOptionPane.showMessageDialog(null, 
                    "Please open an account at BoP",
                    "ERROR", 0);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // DEPOSIT OPERATION
        // Check if the entered account number matches Account1
        if (accNum == a1.getAccNum()) 
        {          
            try
            {
                // Prompt user for deposit amount
                amt = Double.parseDouble(JOptionPane.showInputDialog(null,
                "Enter Amount to Deposit", 
                "DEPOSIT", 3)); 
                // Display confirmation dialog and handle user choices  
                int choice = JOptionPane.showConfirmDialog(null, "Are you sure?", 
                    "CONFIRMATION", JOptionPane.YES_NO_CANCEL_OPTION); 
                switch (choice) {
                    // Deposit amount into Account1 and display transaction details
                    case JOptionPane.YES_OPTION:
                        a1.deposit(amt);
                        JOptionPane.showMessageDialog(null, "You have deposited " + amt);
                        JOptionPane.showMessageDialog(null,
                                "Deposited : " + amt +
                                        "\nCurrent Balance : " + a1.getBalance());
                        break;
                    case JOptionPane.NO_OPTION: // Display message for unsaved changes
                        JOptionPane.showMessageDialog(null, "Changes not saved.");
                        JOptionPane.showMessageDialog(null,
                                "Current Balance : " + a1.getBalance());
                        break;
                    default: // Display message for canceled operation
                        JOptionPane.showMessageDialog(null, "Operation canceled.");
                        break;
                } 
            }
            catch(Exception e) // Display error message for invalid input
            {
                JOptionPane.showMessageDialog(null, 
                "Please input a NUMBER", "ERROR", 0);
            }
                       
        }
        
        // Check if the entered account number matches Account2
        else if (accNum == a2.getAccNum())
        {
            try
            {
                // Prompt user for deposit amount
                amt = Double.parseDouble(JOptionPane.showInputDialog(null,
                    "Enter Amount to Deposit", 
                    "DEPOSIT", 3)); 
                // Display confirmation dialog and handle user choices
                int choice = JOptionPane.showConfirmDialog(null, "Are you sure?", 
                                                   "CONFIRMATION", JOptionPane.YES_NO_CANCEL_OPTION); 
                switch (choice) {
                    // Deposit amount into Account2 and display transaction details
                    case JOptionPane.YES_OPTION:
                        a2.deposit(amt);
                        JOptionPane.showMessageDialog(null, "You have deposited " + amt );
                        JOptionPane.showMessageDialog(null,
                                "Deposited : " + amt +
                                        "\nCurrent Balance : " + a2.getBalance());
                        break;
                    case JOptionPane.NO_OPTION: // Display message for unsaved changes
                        JOptionPane.showMessageDialog(null, "Changes not saved.");
                        JOptionPane.showMessageDialog(null,
                                "Current Balance : " + a2.getBalance());
                        break;
                    default: // Display message for canceled operation
                        JOptionPane.showMessageDialog(null, "Operation canceled.");
                        break;
                } 
            }
            catch(Exception e) // Display error message for invalid input
            {
                JOptionPane.showMessageDialog(null, 
                    "Please input a NUMBER", "ERROR", 0);
            }
                       
        }
        else // Display an error message for an account that doesn't exist
        {
            JOptionPane.showMessageDialog(null, 
                    "Please open an account at BoP",
                    "ERROR", 0);
        } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // WITHDRAW OPERATION
        // Check if the entered account number matches Account1
        if (accNum == a1.getAccNum())
        {

            try
            {
                amt = Double.parseDouble(JOptionPane.showInputDialog(null,
                "Enter Amount to Withdraw", "WITHDRAW", 3)); 
                int choice = JOptionPane.showConfirmDialog(null, "Are you sure?", 
                                                   "CONFIRMATION", JOptionPane.YES_NO_CANCEL_OPTION); 
                switch (choice) {
                    case JOptionPane.YES_OPTION:
                        if (amt < a1.getBalance())
                        {
                            a1.withdraw(amt);
                            JOptionPane.showMessageDialog(null, "You have withdrawn " + amt );
                            JOptionPane.showMessageDialog(null,
                                    "Withdrawn : " + amt +
                                            "\nCurrent Balance : " + a1.getBalance());
                        }
                        else if (amt >= a1.getBalance())
                        {
                            JOptionPane.showMessageDialog(null,
                                    "Insufficient Funds", "ERROR", 0);
                            
                        }   break;
                    case JOptionPane.NO_OPTION:
                        JOptionPane.showMessageDialog(null, "Changes not saved.");
                        JOptionPane.showMessageDialog(null,
                                "Current Balance : " + a1.getBalance());
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "Operation canceled.");
                        break; 
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, 
                 "Please input a NUMBER", "ERROR", 0);
            }
        }
        
        // Check if the entered account number matches Account2
        else if (accNum == a2.getAccNum())
        {

            try
            {
                amt = Double.parseDouble(JOptionPane.showInputDialog(null,
                    "Enter Amount to Withdraw", "WITHDRAW", 3)); 
                int choice = JOptionPane.showConfirmDialog(null, "Are you sure?", 
                                                   "CONFIRMATION", JOptionPane.YES_NO_CANCEL_OPTION); 
                switch (choice) {
                    case JOptionPane.YES_OPTION:
                        if (amt < a2.getBalance())
                        {
                            a2.withdraw(amt);
                            JOptionPane.showMessageDialog(null, "You have withdrawn " + amt);
                            JOptionPane.showMessageDialog(null,
                                    "Withdrawn : " + amt +
                                            "\nCurrent Balance : " + a2.getBalance());
                        }
                        else if (amt >= a2.getBalance())
                        {
                            JOptionPane.showMessageDialog(null,
                                    "Insufficient Funds", "ERROR", 0);
                            
                        }   break;
                    case JOptionPane.NO_OPTION:
                        JOptionPane.showMessageDialog(null, "Changes not saved.");
                        JOptionPane.showMessageDialog(null,
                                "Current Balance : " + a2.getBalance());
                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "Operation canceled.");
                        break; 
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(null, 
                    "Please input a NUMBER", "ERROR", 0);
            }
        }
        // Display an error message for an account that doesn't exist
        else
        {
            JOptionPane.showMessageDialog(null, 
                    "Please open an account at BoP",
                    "ERROR", 0);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // EXIT frame
        // Print message indicating completion of transaction
        System.out.println("Transaction Completed");
        System.exit(0); // Exit the program with status code 0
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BankMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BankMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BankMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BankMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BankMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
